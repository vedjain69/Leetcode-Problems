/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head==nullptr){
            return head;
        }
        if(head->next==nullptr){
            return head;
        }
        ListNode* prev= nullptr;
        ListNode* current=head;
        ListNode* next=head->next;
        int length=0;
        while(current!=nullptr){
            length++;
            current=current->next;
        }

        for( int i=0; i<length;i++){
            next=head->next;
            head->next=prev;
            prev=head;
            head=next;
        }return prev;
    }
};
