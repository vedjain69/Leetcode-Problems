class Solution {
public:
    vector<int> relativeSortArray(vector<int>& arr1, vector<int>& arr2) {

        
        
        /*vector<int> nums;
        vector<int> nums2;
        int n = arr2.size();
        int m = arr1.size();
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(arr1[j]==arr2[i]){
                    nums.push_back(arr1[j]);
                    arr1[j]=-1;
                }
            }
        }
        sort(arr1.begin(), arr1.end());
        for(int j=0; j<arr1.size(); j++){
               if(arr1[j]!=-1){
                 nums.push_back(arr1[j]);
        }}
        arr1=nums;
        return arr1;
*/

    unordered_map<int, int> mapp;
    vector<int> rem, res;
    for(int i=0; i<arr2.size(); i++){
        mapp[arr2[i]]=0;
    }
    for(int i=0; i<arr1.size(); i++){
        if(mapp.find(arr1[i])!=mapp.end()){
            mapp[arr1[i]]++;
        }else{
            rem.push_back(arr1[i]);
        }
    }sort(rem.begin(), rem.end());
    for(int i=0; i<arr2.size(); i++){
        for(int j=0; j<mapp[arr2[i]];j++){
            res.push_back(arr2[i]);
        }
    }
    for(int i=0; i<rem.size(); i++){
        res.push_back(rem[i]);
    } return res;



    }
};
